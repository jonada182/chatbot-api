version: 2.1

jobs:
  deploy:
    docker:
      - image: cimg/aws:2023.04
    environment:
      AWS_REGION: "ca-central-1"
      CONTAINER_NAME: "chatbot-api"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t $CONTAINER_NAME .
      - run:
          name: Push Docker image to ECR
          command: |
            echo $AWS_REGION | echo $AWS_ACCESS_KEY_ID
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker tag $CONTAINER_NAME:latest $ECR_REGISTRY/$CONTAINER_NAME:latest
            docker push $ECR_REGISTRY/$CONTAINER_NAME:latest
      - add_ssh_keys:
          fingerprints:
          - "e6:b0:dd:bb:2a:ba:c3:ba:a4:0f:91:da:07:2b:e2:71"
      - run:
          name: Deploy to EC2 instance
          command: |
            ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa_e6b0ddbb2abac3baa40f91da072be271 ec2-user@$AWS_INSTANCE_IP "if [ \$(sudo docker ps -q -f name=$CONTAINER_NAME) ]; then sudo docker stop $CONTAINER_NAME && sudo docker rm $CONTAINER_NAME; fi && sudo docker pull $ECR_REGISTRY/$CONTAINER_NAME:latest && sudo docker run -d --name $CONTAINER_NAME -p 80:5000 $ECR_REGISTRY/$CONTAINER_NAME:latest"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_test_deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: main # only deploy when on main
