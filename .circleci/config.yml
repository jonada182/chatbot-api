version: 2.1

orbs:
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

jobs:
  build_and_test: # This is the name of the job, feel free to change it to better match what you're trying to do!
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If your requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.
      # - run:
          # name: Run tests
          # This assumes pytest is installed via the install-package step above
           #command: pytest
  deploy:
    docker:
      - image: cimg/aws
    environment:
      AWS_REGION: $AWS_REGION
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_INSTANCE_ID: $AWS_INSTANCE_ID
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t chatbot-api .
      - run:
          name: Push Docker image to ECR
          command: |
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker tag chatbot-api:latest $ECR_REGISTRY/chatbot-api:latest
            docker push $ECR_REGISTRY/chatbot-api:latest
      - run:
          name: Deploy to EC2 instance
          command: |
            aws ssm start-session --target $AWS_INSTANCE_ID --document-name AWS-StartSSHSession --parameters 'portNumber=["22"],localPortNumber=["8080"]'
            ssh -i $SSH_KEY_FILE ec2-user@$AWS_INSTANCE_IP "sudo systemctl stop chatbot-api.service && sudo docker pull $ECR_REGISTRY/chatbot-api:latest && sudo systemctl start chatbot-api.service"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only: main # only deploy when on main
