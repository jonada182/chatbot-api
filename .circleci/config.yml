version: 2.1

commands:
  create_env_file:
    description: "Create .env file"
    steps:
      - run:
          name: Create .env file
          command: |
            echo "PORT=$PORT" > .env
            echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env
            echo "OPENAI_ORG_ID=$OPENAI_ORG_ID" >> .env
            echo "MONGO_URI=$MONGO_URI" >> .env

jobs:
  build:
    docker:
      - image: cimg/python:3.11.3
    steps:
      - checkout
      - create_env_file
      - run:
          name: Install Packages
          command: |
            pip install --upgrade pip pip install --trusted-host pypi.python.org -r requirements.txt
      # Add linter
      - run:
          name: Run Tests
          command: |
            FLASK_ENV=testing python -m pytest tests/

  deploy:
    docker:
      - image: cimg/base:2023.04
    environment:
      CONTAINER_NAME: "chatbot-api"
      HEROKU_APP_NAME: "chatbot-api-service"
    steps:
      - checkout
      - create_env_file
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Heroku
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Login to Heroku Container registry
          command: |
            echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
      - run:
          name: Build and push Docker image
          command: |
            docker build -t $CONTAINER_NAME .
            docker tag $CONTAINER_NAME registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
      - run:
          name: Deploy to Heroku
          command: |
            heroku container:release web --app $HEROKU_APP_NAME

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
